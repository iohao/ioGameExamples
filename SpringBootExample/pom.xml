<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter -->
        <version>3.2.4</version>
        <!-- lookup parent from repository -->
        <relativePath/>
    </parent>
    <groupId>com.iohao.example</groupId>
    <artifactId>ioGame-example-springboot</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <module>spring-common-pb</module>
        <module>spring-game-broker</module>
        <module>spring-game-external</module>
        <module>spring-game-logic-common</module>
        <module>spring-game-logic-classes</module>
        <module>spring-game-logic-hall</module>
        <module>spring-game-logic-school</module>
        <module>spring-game-logic-room-interaction-same</module>
        <module>spring-game-logic-classes-starter</module>
        <module>spring-game-logic-school-starter</module>
        <module>spring-z-one-game</module>
        <module>spring-client</module>
        <module>spring-client-native-pb</module>
    </modules>

    <properties>
        <!-- jdk 版本 -->
        <java.version>21</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- 将xxx 替换成最新的 ioGame 版本 -->
        <ioGame.version>21.29</ioGame.version>

        <lombok.version>1.18.34</lombok.version>
        <!-- Java 实体映射工具 https://mvnrepository.com/artifact/org.mapstruct/mapstruct https://mapstruct.org/documentation/reference-guide/ -->
        <org.mapstruct.version>1.5.5.Final</org.mapstruct.version>

        <logback.version>1.4.14</logback.version>
        <native.maven.plugin.version>0.9.19</native.maven.plugin.version>

        <!--  junit https://mvnrepository.com/artifact/junit/junit  -->
        <junit.version>4.13.2</junit.version>
        <!-- 演示用的假数据 https://mvnrepository.com/artifact/com.github.javafaker/javafaker -->
        <javafaker.version>1.0.2</javafaker.version>
        <!-- https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2 -->
        <fastjson2.version>2.0.46</fastjson2.version>

        <!-- JSR380 bean 验证框架 https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
        <hibernate-validator.version>7.0.4.Final</hibernate-validator.version>
        <!-- JSR380 https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api -->
        <jakarta.validation-api.version>3.0.2</jakarta.validation-api.version>
        <!-- JSR380 https://mvnrepository.com/artifact/org.glassfish/jakarta.el -->
        <jakarta.el.version>4.0.2</jakarta.el.version>

        <!--  junit https://mvnrepository.com/artifact/junit/junit  -->
        <junit.version>4.13.2</junit.version>
        <!-- https://mvnrepository.com/artifact/cn.hutool/hutool-all -->
        <hutool.version>5.8.5</hutool.version>
        <!-- 模拟客户端 https://mvnrepository.com/artifact/org.java-websocket/Java-WebSocket -->
        <java-websocket.version>1.5.3</java-websocket.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2 -->
        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2</artifactId>
            <version>${fastjson2.version}</version>
        </dependency>

        <dependency>
            <groupId>com.iohao.game</groupId>
            <artifactId>run-one-netty</artifactId>
            <version>${ioGame.version}</version>
        </dependency>

        <!-- lombok 简化 java 代码 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- https://mvnrepository.com/artifact/ch.qos.logback/logback-classic -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.alibaba.fastjson2/fastjson2 -->
        <dependency>
            <groupId>com.alibaba.fastjson2</groupId>
            <artifactId>fastjson2</artifactId>
            <version>2.0.48</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <!--
            编译插件
            mvn compile
            To compile your test sources, you'll do:
            mvn test-compile
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!--                <version>3.11.0</version>-->
                <version>3.8.1</version>
                <configuration>
                    <compilerVersion>${java.version}</compilerVersion>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <!-- maven 3.6.2及之后加上编译参数，可以让我们在运行期获取方法参数名称。 -->
                    <parameters>true</parameters>
                    <skip>true</skip>
                    <!-- JDK9+ with module-info.java -->
                    <annotationProcessorPaths>
                        <!-- lombok 消除冗长的 Java 代码 -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                            <version>${lombok.version}</version>
                        </path>
                        <!-- additional annotation processor required as of Lombok 1.18.16 -->
                        <!-- mapStruct 支持 lombok -->
                        <path>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok-mapstruct-binding</artifactId>
                            <version>0.2.0</version>
                        </path>
                    </annotationProcessorPaths>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
